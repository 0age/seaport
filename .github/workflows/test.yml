name: Consideration Test CI

on: [push]

jobs:
  build:
    name: Build Artifacts
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install
      - run: yarn build

  lint:
    name: Run Linters
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install
      - run: yarn lint:check

  test:
    name: Run Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install
      - run: yarn test

  reference-test:
    name: Run Reference Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    env:
      REFERENCE: true

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install
      - run: yarn test:ref

  forge-lite:
    name: Run "Lite" Forge Tests (via_ir = false; fuzz_runs = 1000)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install forge dependencies
        run: forge install

      - name: Precompile reference using 0.8.7 and via-ir=false
        run: FOUNDRY_PROFILE=reference forge build

      - name: Run tests
        run: FOUNDRY_PROFILE=lite forge test -vvv

  forge:
    name: Run Forge Tests (via_ir = true; fuzz_runs = 5000)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install forge dependencies
        run: forge install

      - name: Precompile reference using 0.8.7 and via-ir=false
        run: FOUNDRY_PROFILE=reference forge build

      - name: Precompile optimized using 0.8.13 and via-ir=true
        run: FOUNDRY_PROFILE=optimized forge build

      - name: Run tests
        run: FOUNDRY_PROFILE=test forge test -vvv

  coverage:
    name: Run Coverage Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install
      - run: yarn coverage
      - uses: VeryGoodOpenSource/very_good_coverage@v1
        with:
          path: "./coverage/lcov.info"
          min_coverage: 100

  reference-coverage:
    name: Run Reference Coverage Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    env:
      REFERENCE: true

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install
      - run: yarn coverage:ref
      - uses: VeryGoodOpenSource/very_good_coverage@v1
        with:
          path: "./coverage/lcov.info"
          min_coverage: 100

  echidna:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Use Node.js 16
      uses: actions/setup-node@v2
      with:
        node-version: 16
        cache: 'npm'
    - name: Install dependencies
      run: yarn install
    - name: Compile contracts
      run: yarn build
    - name: Run Echidna
      uses: crytic/echidna-action@v2
      with:
        solc-version: 0.8.13
        files: .
        contract: Echidna
        config: ./echidna/echidna.conf.yaml
        crytic-args: --hardhat-ignore-compile